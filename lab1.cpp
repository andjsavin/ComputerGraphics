/*#include <windows.h>
#include <GL/gl.h>
#include <glut.h>
#include <stdlib.h>

float width = 800.0;
float height = 600.0;
float rotAngle = 0;
float wAngle = 1;
float xStep = 0.0;
float yStep = 0.0;
int direction = 1;
int c = 0;

void changeSize(int w, int h) {
	if (h == 0)
		h = 1;
	width = w;
	height = h;
	GLdouble ratio = 1.0f*w / h;
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glViewport(0, 0, w, h);
	gluPerspective(45, ratio, 1, 1000);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluLookAt(0, 0, 22,
		-2, -1, 0,
		0, 1, 0);
}

void renderScene() {
	if (direction == 1) {
		xStep -= 0.02f;
		yStep -= 0.02f;
	}
	else if (direction == -1) {
		xStep += 0.02f;
		yStep += 0.02f;
	}
	if (c == 50) {
		direction *= -1;
		c = 0;
	}
	c++;
	rotAngle += 1;
	glClearColor(0, 0, 0, 1);
	glClearDepth(1.0f);
	glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);
	glTranslatef(-2.0f, -1.0f, 0.0f);
	glRotatef(wAngle, 0.0, 0.0, -1.0);
	glTranslatef(2.0f, 1.0f, 0.0f);
	glPushMatrix();
	glTranslatef(-5.0f + xStep * 3, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(1.0, 0.0, 0.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-4.0f + xStep * 2.25, -3.0f + yStep * 2.25, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, -4.0f + yStep * 3, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-4.0f + xStep * 2, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, -3.0f + yStep * 2, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();

	glPushMatrix();
	glTranslatef(-5.0f + xStep * 3, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(1.0, 0.0, 0.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-4.0f + xStep * 2.25, 0.0f - yStep * 2.25, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, 1.0f - yStep * 3, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-4.0f + xStep * 2, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, 0.0f - yStep * 2, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-3.0f + xStep * 1.5, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(2.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-2.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();

	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, 1.0f - yStep * 3, 0.0f);
	glColor3f(1.0, 0.0, 0.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-1.0f - xStep * 2.25, 0.0f - yStep * 2.25, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(0.0f - xStep * 3, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, 0.0f - yStep * 2, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-1.0f - xStep * 2, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, -1.0f - yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 1.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -1.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(1, 0);
	glVertex2f(0, 1);
	glEnd();
	glPopMatrix();

	glPushMatrix();
	glTranslatef(0.0f - xStep * 3, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(1.0, 0.0, 0.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-1.0f - xStep * 2.25, -3.0f + yStep * 2.25, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, -4.0f + yStep * 3, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-1.0f - xStep * 2, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(0.0, 1.0, 0.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, -3.0f + yStep * 2, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glPushMatrix();
	glTranslatef(-2.0f - xStep * 1.5, -2.0f + yStep * 1.5, 0.0f);
	glColor3f(0.0, 0.0, 1.0);
	glTranslatef(1.0f / 3.0f, 2.0 / 3.0f, 0.0f);
	glRotatef(rotAngle, 0.0, 0.0, -1.0);
	glTranslatef(-1.0f / 3.0f, -2.0 / 3.0f, 0.0f);
	glBegin(GL_TRIANGLE_STRIP);
	glVertex2f(0, 0);
	glVertex2f(0, 1);
	glVertex2f(1, 1);
	glEnd();
	glPopMatrix();
	glutSwapBuffers();
}

int main(int argc, char **argv) {

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DEPTH | GLUT_DOUBLE | GLUT_RGBA);
	glutInitWindowPosition(100, 200);
	glutInitWindowSize(width, height);
	glutCreateWindow("OpenGL");
	glutDisplayFunc(renderScene);
	glutIdleFunc(renderScene);
	glutReshapeFunc(changeSize);
	glutMainLoop();
	return(0);
}*/